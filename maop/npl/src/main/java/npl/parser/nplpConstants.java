/* Generated By:JavaCC: Do not edit this line. nplpConstants.java */
// NPL parser

  package npl.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface nplpConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int VAR = 7;
  /** RegularExpression Id. */
  int TK_NOT = 8;
  /** RegularExpression Id. */
  int TK_LABEL_AT = 9;
  /** RegularExpression Id. */
  int TK_INTDIV = 10;
  /** RegularExpression Id. */
  int TK_INTMOD = 11;
  /** RegularExpression Id. */
  int NUMBER = 12;
  /** RegularExpression Id. */
  int EXPONENT = 13;
  /** RegularExpression Id. */
  int STRING = 14;
  /** RegularExpression Id. */
  int NP = 15;
  /** RegularExpression Id. */
  int SCOPE = 16;
  /** RegularExpression Id. */
  int NORM = 17;
  /** RegularExpression Id. */
  int SANCTION = 18;
  /** RegularExpression Id. */
  int FAIL = 19;
  /** RegularExpression Id. */
  int IF = 20;
  /** RegularExpression Id. */
  int FULFILLED = 21;
  /** RegularExpression Id. */
  int UNFULFILLED = 22;
  /** RegularExpression Id. */
  int INACTIVE = 23;
  /** RegularExpression Id. */
  int OBLIGATION = 24;
  /** RegularExpression Id. */
  int PERMISSION = 25;
  /** RegularExpression Id. */
  int PROHIBITION = 26;
  /** RegularExpression Id. */
  int ATOM = 27;
  /** RegularExpression Id. */
  int UNNAMEDVAR = 28;
  /** RegularExpression Id. */
  int CHAR = 29;
  /** RegularExpression Id. */
  int LETTER = 30;
  /** RegularExpression Id. */
  int LC_LETTER = 31;
  /** RegularExpression Id. */
  int UP_LETTER = 32;
  /** RegularExpression Id. */
  int DIGIT = 33;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "<VAR>",
    "\"not\"",
    "\"@\"",
    "\"div\"",
    "\"mod\"",
    "<NUMBER>",
    "<EXPONENT>",
    "<STRING>",
    "\"np\"",
    "\"scope\"",
    "\"norm\"",
    "\"sanction-rule\"",
    "\"fail\"",
    "\"if\"",
    "\"fulfilled\"",
    "\"unfulfilled\"",
    "\"inactive\"",
    "\"obligation\"",
    "\"permission\"",
    "\"prohibition\"",
    "<ATOM>",
    "<UNNAMEDVAR>",
    "<CHAR>",
    "<LETTER>",
    "<LC_LETTER>",
    "<UP_LETTER>",
    "<DIGIT>",
    "\"{\"",
    "\".\"",
    "\"}\"",
    "\":-\"",
    "\":\"",
    "\"->\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"|\"",
    "\"]\"",
    "\"&\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"==\"",
    "\"\\\\==\"",
    "\"=\"",
    "\"=..\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"**\"",
    "\"`\"",
  };

}
